{"version":3,"sources":["components/Dropdown.jsx","components/StartScreen.jsx","text/instructions_text.js","components/EvaluateGuess.jsx","components/PlayScreen.jsx","components/EndScreen.jsx","App.js","index.js"],"names":["MARGIN","margin","Dropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","difficulty","displayMenu","openMenu","bind","assertThisInitialized","closeMenu","handleSubmit","guessesCallback","e","_this2","preventDefault","setState","document","addEventListener","_this3","removeEventListener","_this4","target","getAttribute","difficultyLevel","callbackFromParent","react_default","a","createElement","style","onClick","className","value","Component","StartScreen","body","backgroundColor","components_Dropdown","instructionsCallback","EvaluateGuess","randomNum","toConsumableArray","String","guess","result","forEach","digit","i","includes","push","length","winCallback","join","FLEX","display","flexDirection","marginBottom","PlayScreen","input","handleChange","myFun","Number","isInteger","alert","guesses","console","log","onSubmit","type","onChange","EndScreen","win","PlayAgainCallback","App","instructions","getRandomNum","axios","get","then","response","data","guessesLeft","chosenDifficulty","instrBool","components_StartScreen","difficultyCallback","components_EndScreen","components_PlayScreen","guessCallback","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.cfa347a7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './AppStyles.css'\r\n\r\nconst MARGIN = {\r\n    margin: '0',\r\n}\r\n\r\nclass Dropdown extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            difficulty: \"Easy\",\r\n            displayMenu: false,\r\n        }\r\n\r\n        this.openMenu = this.openMenu.bind(this)\r\n        this.closeMenu = this.closeMenu.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.guessesCallback = this.guessesCallback.bind(this)\r\n    }\r\n\r\n    openMenu(e) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            displayMenu: true,\r\n        }, () => {document.addEventListener(\"click\", this.closeMenu)})\r\n    }\r\n\r\n    closeMenu() {\r\n        this.setState({\r\n            displayMenu: false\r\n        }, ()=> {document.removeEventListener(\"click\", this.closeMenu)})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            difficulty: e.target.getAttribute(\"value\")\r\n        },() => {this.guessesCallback()} )\r\n            \r\n    }\r\n    \r\n    guessesCallback() {\r\n        // [...somewhere in here I define a variable listInfo which    I think will be useful as data in my ToDoList component...]\r\n        const difficultyLevel = this.state.difficulty\r\n        this.props.callbackFromParent(difficultyLevel) \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h2 style={MARGIN} onClick={this.openMenu}>Difficulty</h2>\r\n                    <p>{this.state.difficulty}</p>\r\n                </div>\r\n                <div>\r\n                    {this.state.displayMenu ?\r\n                    (\r\n                    <ul className='listStyle'>\r\n                        <li value=\"Easy\" onClick={this.handleSubmit}>Easy</li>\r\n                        <li value=\"Medium\" onClick={this.handleSubmit}>Medium</li>\r\n                        <li value=\"Hard\" onClick={this.handleSubmit}>Hard</li>\r\n                    </ul>\r\n                    )\r\n                    :\r\n                    (\r\n                        null\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )}\r\n}\r\n\r\nexport default Dropdown","import React, { Component } from 'react';\r\nimport INSTRUCTIONS from '../text/instructions_text'\r\nimport Dropdown from './Dropdown'\r\nimport './AppStyles.css'\r\n\r\n\r\n\r\nclass StartScreen extends Component {\r\n\r\n    componentDidMount(){\r\n        document.body.style.backgroundColor = 'lavender'\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='general startScreen'>\r\n                <h1 className='startHeading'>BAGELS!</h1>\r\n                <div className='instructions'>\r\n                    <h2>Instructions</h2>\r\n                    <p>{INSTRUCTIONS}</p>\r\n                </div>\r\n                <div className='settings'>    \r\n                    <Dropdown \r\n                    callbackFromParent={this.props.callbackFromParent.bind(this)}\r\n                    />\r\n                    <button className='button' onClick={this.props.instructionsCallback.bind(this)}>Start Game</button>\r\n                </div>   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StartScreen","const INSTRUCTIONS = `\r\nWe will start with a three digit number. \r\nYou will attempt to guess the number, and\r\nI will respond to each guess as follows:\r\n\r\n• If the guess has no numbers correct, I'll respond: \"Bagel.\"\r\n• For each digit the guess has correct, but in the wrong place, I'll respond: \"Pico.\"\r\n• For each digit the guess has correct and in the correct place, I'll respond: \"Fermi.\"\r\n\r\nAs an example, let's say that I thought of the secret number 489.\r\n\r\nGuess 1: 362 Bagel — no digit is correct.\r\nGuess 2: 820 Pico — the 8 is in the wrong place.\r\nGuess 3: 418 Pico Fermi — the 8 is in the wrong place, the 4 is in the correct place.\r\nGuess 4: 518 Pico — the 8 is in the wrong place.\r\nGuess 5: 487 Fermi Fermi — the 4 and 8 are in the correct place.\r\nGuess 6: 489 Fermi Fermi Fermi — all digits are in the correct place`\r\n\r\nexport default INSTRUCTIONS","import React from 'react'\r\n\r\nexport function EvaluateGuess (props) {\r\n  \r\n    let randomNum = [...String(props.randomNum)]  \r\n    let guess = [...String(props.guess)]        \r\n    let result = []\r\n    \r\n    if (props.guess){\r\n        guess.forEach((digit, i) => {           \r\n            if (randomNum.includes(digit)) {\r\n                if (digit === randomNum[i]) { \r\n                    result.push(\"fermi\")\r\n                    delete randomNum[i]\r\n                }\r\n                else {\r\n                    result.push(\"pico\")\r\n                    delete randomNum[i]\r\n                }\r\n            }\r\n        })\r\n    \r\n        if (!result.length) {\r\n            result.push(\"bagel\")\r\n        }\r\n    \r\n        if (result.length === 3 && !result.includes(\"pico\")) {            \r\n            props.winCallback()\r\n        }\r\n    \r\n        return <h1>{result.join(',')}</h1>\r\n    }\r\n    return null\r\n}\r\n\r\n\r\n// guess = ''\r\n\r\n// playAgain = 'Y'\r\n\r\n// while playAgain == 'Y':\r\n//     secretNumber = secretNum()\r\n//     while guess != secretNumber:\r\n//         guess = getGuess()\r\n//         compareGuess()\r\n//     else:\r\n//         print('yay!')\r\n//         playAgain = input('play again? Enter Y to play again and any other key to quit')\r\n        \r\n\r\n","import React, { Component } from 'react'\r\nimport { EvaluateGuess } from './EvaluateGuess.jsx'\r\nimport './AppStyles.css'\r\n\r\n\r\nconst FLEX = {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n}\r\n\r\nconst MARGIN = {\r\n    marginBottom: '5%'\r\n}\r\n\r\nclass PlayScreen extends Component {\r\n    constructor(props) {\r\n        super(props) \r\n\r\n        this.state = {\r\n            input : '',\r\n            guess: 0,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.myFun = this.myFun.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.style.backgroundColor = 'aqua'\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({input: e.target.value})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (this.state.input.length === 3 && Number.isInteger(Number(this.state.input))) {\r\n            this.setState({\r\n                    guess: this.state.input,\r\n                    input: '',  \r\n                }, () => {this.myFun()})\r\n        }\r\n        else {\r\n            alert(\"guess should be 3 numbers\")\r\n        }\r\n\r\n    }\r\n  \r\n    myFun() {\r\n        // [...somewhere in here I define a variable listInfo which    I think will be useful as data in my ToDoList component...]\r\n        this.props.callbackFromParent((this.props.guesses - 1)) \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log(\"submit guess is rendering\")\r\n        console.log(\"guess: \" + this.state.guess);\r\n                \r\n        return (\r\n            <div className='general'>\r\n                <h1>Guesses: {this.props.guesses}</h1>\r\n                <h2 style={MARGIN} >Guess a 3 digit number</h2>\r\n                <form style={FLEX} onSubmit={this.handleSubmit}>\r\n                    <input className='input'\r\n                    type='text'\r\n                    value={this.state.input}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                    <input className='button' type='submit' value='submit'/>\r\n                </form>\r\n                <EvaluateGuess\r\n                guess = {this.state.guess}\r\n                randomNum = {this.props.randomNum}\r\n                winCallback = {this.props.winCallback.bind(this)} \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayScreen","import React, { Component } from 'react'\r\nimport './AppStyles.css'\r\n\r\nclass EndScreen extends Component {\r\n\r\n    componentDidMount() {\r\n        document.body.style.backgroundColor = 'blue'\r\n    }\r\n\r\n    render() {\r\n        if (this.props.win === true) {\r\n            return  (\r\n                <div className='general'>\r\n                    <h1>You Win!</h1>\r\n                    <button className='button' onClick={this.props.PlayAgainCallback.bind(this)}>Play Again?</button>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return  (\r\n                <div>\r\n                    <h1>You Lose</h1>\r\n                    <button className='button' onClick={this.props.PlayAgainCallback.bind(this)}>Play Again?</button>\r\n                </div>\r\n            )  \r\n        }\r\n    }\r\n}\r\n\r\nexport default EndScreen","import React, { Component } from 'react';\nimport StartScreen from './components/StartScreen.jsx'\nimport PlayScreen from './components/PlayScreen.jsx'\nimport EndScreen from './components/EndScreen.jsx'\nimport axios from 'axios' \nimport './components/AppStyles.css'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      randomNum: 0,\n      instructions: true,\n      win: false,\n      guesses: 15\n    }\n\n    this.getRandomNum = this.getRandomNum.bind(this)\n\n  }\n\n  componentDidMount() {\n    console.log('---componentDidMount---')\n    this.getRandomNum()\n    console.log(this.state.randomNum)\n\n  }\n\n  getRandomNum() {\n    axios.get('https://www.random.org/integers/?num=1&min=100&max=999&col=1&base=10&format=plain')\n    .then((response) => {\n      this.setState({\n      randomNum: response.data\n    })})\n  }\n  \n  winCallback() {\n    this.setState({\n      win: true\n    })\n  }\n\n  guessCallback(guessesLeft) {\n    this.setState({\n      guesses: guessesLeft\n    })\n  }\n\n  difficultyCallback(chosenDifficulty) {\n    if (chosenDifficulty === \"Easy\") {\n      console.log(\"chose easy\");\n            \n      this.setState({\n        guesses: 15\n      })\n    }\n\n    if (chosenDifficulty === \"Medium\") {\n      console.log(\"chose medium\");\n      \n      this.setState({\n        guesses: 10\n      })\n    }\n    if (chosenDifficulty === \"Hard\") {\n      console.log(\"chose hard\");\n      \n      this.setState({\n        guesses: 5\n      })\n    }\n    console.log(\"guesses:  \" + this.state.guesses)\n  }\n\n  instructionsCallback(instrBool) {\n    this.setState({\n      instructions: false\n    })\n  }\n\n  PlayAgainCallback() {\n    this.setState({\n      instructions: true,\n      guesses: 15,\n      win: false,\n      randomNum: 0\n    }, () => {this.getRandomNum()}) \n  }\n\n  render() {\n    console.log(this.state.randomNum)\n    if (this.state.instructions === true) {\n\n      return (\n        <StartScreen \n        callbackFromParent= {this.difficultyCallback.bind(this)} \n        instructionsCallback = {this.instructionsCallback.bind(this)}\n        />\n      )\n    }\n    \n    if (this.state.guesses === 0 || this.state.win === true) {\n      return (\n        <EndScreen\n        PlayAgainCallback = {this.PlayAgainCallback.bind(this)}\n        win = {this.state.win}\n        />\n      )\n    }\n\n    return (\n        <PlayScreen\n        randomNum = {this.state.randomNum}\n        guesses = {this.state.guesses}\n        callbackFromParent={this.guessCallback.bind(this)}\n        winCallback = {this.winCallback.bind(this)} \n        />\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}